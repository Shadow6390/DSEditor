/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dungeon.souls.modding.tool.ui;

import dungeon.souls.modding.tool.steam.SteamManager;
import dungeon.souls.modding.tool.steam.SteamWorkshopCommunityItem;
import dungeon.souls.modding.tool.steam.SteamWorkshopModule;
import dungeon.souls.modding.tool.ui.input.verifiers.CombinedInputVerifier;
import dungeon.souls.modding.tool.ui.input.verifiers.StringNotEmtyRestriction;
import java.awt.Color;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Diogo
 */
public class SteamWorkshopInformationChooseUI extends javax.swing.JDialog
{

    /**
     * Cached data for creating the community item.
     */
    private Map<SteamWorkshopCommunityItem.ATTRIBUTES,String> map;
    
    /**
     * String verifier.
     */
    private CombinedInputVerifier verifierStrings;
    /**
     * Creates new form DialogDirectoryFileChoose
     */
    public SteamWorkshopInformationChooseUI(java.awt.Frame parent, boolean modal,SteamWorkshopModule module)
    {
        super(parent, modal);
        initComponents();
        verifierStrings = new CombinedInputVerifier(notificationLabel);
        verifierStrings.addRestriction(new StringNotEmtyRestriction());
        nameField.setInputVerifier(verifierStrings);
        initFill(module);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionField = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        previewField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        logField = new javax.swing.JTextArea();
        notificationLabel = new javax.swing.JLabel();
        licenseLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("Submit");
        okButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                okButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Steam Workshop Item Title:");

        nameField.setName("Title"); // NOI18N
        nameField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nameFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Steam Workshop Description:");

        descriptionField.setColumns(20);
        descriptionField.setRows(5);
        jScrollPane1.setViewportView(descriptionField);

        jLabel3.setText("Steam Workshop Preview:");

        previewField.setEditable(false);

        jButton1.setText("Choose");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Change Log:");

        logField.setColumns(20);
        logField.setRows(5);
        jScrollPane2.setViewportView(logField);

        notificationLabel.setForeground(new java.awt.Color(255, 0, 0));

        licenseLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        licenseLabel.setText("By submitting this item, you agree to the workshop terms of service");
        licenseLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                licenseLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                licenseLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                licenseLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameField))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(previewField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notificationLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(licenseLabel))
                        .addGap(0, 186, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(previewField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(notificationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelButton)
                            .addComponent(okButton)))
                    .addComponent(licenseLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
    {//GEN-HEADEREND:event_okButtonActionPerformed
        // TODO add your handling code here:
        map = new LinkedHashMap<>();
        if (verifierStrings.verify(nameField))
        {
            map.put(SteamWorkshopCommunityItem.ATTRIBUTES.TITLE, nameField.getText());
            String desc = descriptionField.getText();
            String preview = previewField.getText();
            String log = logField.getText();
            if (!desc.isEmpty())
            {
                map.put(SteamWorkshopCommunityItem.ATTRIBUTES.DESCRIPTION, desc);
            }
            if (!preview.isEmpty())
            {
                map.put(SteamWorkshopCommunityItem.ATTRIBUTES.ITEM_PREVIEW, preview);
            }
            if (!log.isEmpty())
            {
                map.put(SteamWorkshopCommunityItem.ATTRIBUTES.CHANGE_LOG, log);
            }
            dispose();
        }
        else
        {
            showErrorMessage("Title must be defined.");
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.addChoosableFileFilter(new FileNameExtensionFilter("Image file (.png, .jpg, .jpeg, .gif)", new String[]{"png","jpg","jpeg","gif"}));
        int result = chooser.showOpenDialog(rootPane);
        if (result==JFileChooser.APPROVE_OPTION)
        {
            previewField.setText(chooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nameFieldActionPerformed
    {//GEN-HEADEREND:event_nameFieldActionPerformed
        // TODO add your handling code here:
        okButtonActionPerformed(evt);
    }//GEN-LAST:event_nameFieldActionPerformed

    private void licenseLabelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_licenseLabelMouseEntered
    {//GEN-HEADEREND:event_licenseLabelMouseEntered
        // TODO add your handling code here:
        licenseLabel.setForeground(Color.ORANGE);
    }//GEN-LAST:event_licenseLabelMouseEntered

    private void licenseLabelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_licenseLabelMouseExited
    {//GEN-HEADEREND:event_licenseLabelMouseExited
        // TODO add your handling code here:
        licenseLabel.setForeground(Color.BLACK);
    }//GEN-LAST:event_licenseLabelMouseExited

    private void licenseLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_licenseLabelMouseClicked
    {//GEN-HEADEREND:event_licenseLabelMouseClicked
        // TODO add your handling code here:
        try 
        {
            SteamManager.getInstance().redirectToLicenseAgreement();
        } 
        catch (URISyntaxException | IOException ex) 
        {
            EditorMain.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_licenseLabelMouseClicked

    /**
     * Returns the choosen final path.
     * @return 
     */
    public Map<SteamWorkshopCommunityItem.ATTRIBUTES,String> getAttributeMap()
    {
        return map;
    }
    
    /**
     * Fills the initial fields with content, if possible.
     * @param module The Steam workshop module (can be null).
     */
    private void initFill(SteamWorkshopModule module)
    {
        if (module!=null)
        {
            nameField.setText(module.getTitle());
            descriptionField.setText(module.getDescription());
            previewField.setText(module.getPreview());
        }
    }

    /**
     * Displays an error message.
     * @param message 
     */
    private void showErrorMessage(String message)
    {
        JOptionPane.showMessageDialog(null,message,"ERROR",JOptionPane.ERROR_MESSAGE);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextArea descriptionField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel licenseLabel;
    private javax.swing.JTextArea logField;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel notificationLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField previewField;
    // End of variables declaration//GEN-END:variables
}
