/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dungeon.souls.modding.tool.ui;

import dungeon.souls.modding.tool.model.compiling.ModdingFile;
import dungeon.souls.modding.tool.model.item.ItemCodeTemplate;
import dungeon.souls.modding.tool.model.item.ItemTemplateData;
import dungeon.souls.modding.tool.model.module.ModuleProject;
import dungeon.souls.modding.tool.ui.input.verifiers.CombinedInputVerifier;
import dungeon.souls.modding.tool.ui.input.verifiers.InputRestriction;
import dungeon.souls.modding.tool.ui.input.verifiers.IntegerRestriction;
import dungeon.souls.modding.tool.ui.input.verifiers.StringNotEmtyRestriction;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author Diogo
 */
public class CreateItemUI extends javax.swing.JDialog
{

    private ModuleProject project;
    
    private DefaultMutableTreeNode root;
    
    private CombinedInputVerifier verifierStrings;
    
    private CombinedInputVerifier verifierIntegers;
    
    private CombinedInputVerifier verifierMaxStacks;
    /**
     * Creates new form CreateProjectUI
     */
    public CreateItemUI(java.awt.Frame parent, boolean modal,ModuleProject project,DefaultMutableTreeNode root)
    {
        super(parent, modal);
        initComponents();
        this.project = project;
        this.root=root;
        
        verifierStrings = new CombinedInputVerifier(errorNotificationLabel);
        verifierStrings.addRestriction(new StringNotEmtyRestriction());
        
        verifierIntegers = new CombinedInputVerifier(errorNotificationLabel);
        verifierIntegers.addRestriction(new StringNotEmtyRestriction());
        verifierIntegers.addRestriction(new IntegerRestriction());
        
        verifierMaxStacks = new CombinedInputVerifier(errorNotificationLabel);
        verifierMaxStacks.addRestriction(new StringNotEmtyRestriction());
        verifierMaxStacks.addRestriction(new IntegerRestriction());
        verifierMaxStacks.addRestriction(new InputRestriction() {

            @Override
            public boolean isValid(String data)
            {
                boolean valid = false;
                try
                {
                    int val = Integer.parseInt(data);
                    valid = val>0;
                }
                catch (NumberFormatException e)
                {
                    //Not a number, carry on
                }
                return valid;
            }

            @Override
            public String getReason()
            {
                return "Value must be higher than zero";
            }
        });
        
        nameField.setAction(jButton2.getAction());
        nameField.setInputVerifier(verifierStrings);
        
        descriptionField.setAction(jButton2.getAction());
        descriptionField.setInputVerifier(verifierStrings);
        
        priceField.setAction(jButton2.getAction());
        priceField.setInputVerifier(verifierIntegers);
        
        maxStackField.setAction(jButton2.getAction());
        maxStackField.setInputVerifier(verifierMaxStacks);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        descriptionField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        maxStackField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        onPickupField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        onActiveField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        onStepField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        typeCombo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        rarityCombo = new javax.swing.JComboBox();
        errorNotificationLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Name:");

        nameField.setInheritsPopupMenu(true);
        nameField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nameFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Create");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                confirmButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Description:");

        descriptionField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                descriptionFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Max Stacks: ");

        maxStackField.setText("1");
        maxStackField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                maxStackFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Price:");

        priceField.setText("0");
        priceField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                priceFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("onItemPickup Function (optional):");

        onPickupField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                onPickupFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("onItemActivated Function (optional):");

        onActiveField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                onActiveFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("stepTick Function (optional):");

        onStepField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                onStepFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("Type:");

        typeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "item_passive", "item_consumable", "item_active" }));

        jLabel9.setText("Rarity:");

        rarityCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "item_common", "item_uncommon", "item_rare", "item_legendary", "item_cursed" }));

        errorNotificationLabel.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionField)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(onPickupField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(onActiveField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(onStepField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(maxStackField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(38, 38, 38)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(33, 33, 33)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8))
                                    .addGap(28, 28, 28)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rarityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9))))
                            .addComponent(errorNotificationLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maxStackField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rarityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(onPickupField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(onActiveField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(onStepField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(errorNotificationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        requestFocus();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_confirmButtonActionPerformed
    {//GEN-HEADEREND:event_confirmButtonActionPerformed
        // TODO add your handling code here:
        ItemTemplateData data = new ItemTemplateData();
        data.name = nameField.getText();
        data.description = descriptionField.getText();
        data.maxStacks = Integer.parseInt(maxStackField.getText());
        data.price = Integer.parseInt(priceField.getText());
        data.type = typeCombo.getSelectedItem().toString();
        data.rarity = rarityCombo.getSelectedItem().toString();
        
        data.onPickupFunction = onPickupField.getText();
        if (data.onPickupFunction.isEmpty())
        {
            data.onPickupFunction=null;
        }
        data.onActiveFunction = onActiveField.getText();
        if (data.onActiveFunction.isEmpty())
        {
            data.onActiveFunction=null;
        }
        data.onStepFunction = onStepField.getText();
        if (data.onStepFunction.isEmpty())
        {
            data.onStepFunction=null;
        }
        if (verifierStrings.verify(nameField) && verifierStrings.verify(descriptionField) 
                && verifierIntegers.verify(priceField) && verifierMaxStacks.verify(maxStackField))
        {
            ItemCodeTemplate template = new ItemCodeTemplate();
            template.fillTemplate(data);
            ModdingFile item = project.createNewItem(data.name,template);
            root.add(new DefaultMutableTreeNode(item));
            dispose();
        }
        else
        {
            showErrorMessage("Some required fields are empty. Please fill them accordingly.");
        }
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nameFieldActionPerformed
    {//GEN-HEADEREND:event_nameFieldActionPerformed
        // TODO add your handling code here:
        confirmButtonActionPerformed(evt);
    }//GEN-LAST:event_nameFieldActionPerformed

    private void descriptionFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_descriptionFieldActionPerformed
    {//GEN-HEADEREND:event_descriptionFieldActionPerformed
        // TODO add your handling code here:
        confirmButtonActionPerformed(evt);
    }//GEN-LAST:event_descriptionFieldActionPerformed

    private void maxStackFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_maxStackFieldActionPerformed
    {//GEN-HEADEREND:event_maxStackFieldActionPerformed
        // TODO add your handling code here:
        confirmButtonActionPerformed(evt);
    }//GEN-LAST:event_maxStackFieldActionPerformed

    private void priceFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_priceFieldActionPerformed
    {//GEN-HEADEREND:event_priceFieldActionPerformed
        // TODO add your handling code here:
        confirmButtonActionPerformed(evt);
    }//GEN-LAST:event_priceFieldActionPerformed

    private void onPickupFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onPickupFieldActionPerformed
    {//GEN-HEADEREND:event_onPickupFieldActionPerformed
        // TODO add your handling code here:
        confirmButtonActionPerformed(evt);
    }//GEN-LAST:event_onPickupFieldActionPerformed

    private void onActiveFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onActiveFieldActionPerformed
    {//GEN-HEADEREND:event_onActiveFieldActionPerformed
        // TODO add your handling code here:
        confirmButtonActionPerformed(evt);
    }//GEN-LAST:event_onActiveFieldActionPerformed

    private void onStepFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onStepFieldActionPerformed
    {//GEN-HEADEREND:event_onStepFieldActionPerformed
        // TODO add your handling code here:
        confirmButtonActionPerformed(evt);
    }//GEN-LAST:event_onStepFieldActionPerformed

    private void showErrorMessage(String message)
    {
        JOptionPane.showMessageDialog(null,message,"ERROR",JOptionPane.ERROR_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField descriptionField;
    private javax.swing.JLabel errorNotificationLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField maxStackField;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField onActiveField;
    private javax.swing.JTextField onPickupField;
    private javax.swing.JTextField onStepField;
    private javax.swing.JTextField priceField;
    private javax.swing.JComboBox rarityCombo;
    private javax.swing.JComboBox typeCombo;
    // End of variables declaration//GEN-END:variables
}
